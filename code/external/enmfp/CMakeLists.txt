#Setup directory paths
SET(ROOT ${CMAKE_CURRENT_SOURCE_DIR})
SET(HEADERS ${ROOT}/headers)
SET(LIBRARIES64 ${ROOT}/libraries/64bit)
SET(LIBRARIES32 ${ROOT}/libraries/32bit)
SET(ENMFP_LIBRARY_LOCATION ${CMAKE_INSTALL_PREFIX}/external/enmfp CACHE INTERNAL "ENMFP library install directory")

IF(${SYSTEM} STREQUAL "WINDOWS")
	SET(VI_ENMFP_LIBRARY_NAME "codegen_dll.lib codegen.dll")
	SET(VI_ENMFP_LIBRARY_CURRENT ${LIBRARIES32}/codegen.dll)
ELSEIF(${SYSTEM} STREQUAL "MACOSX")
	IF(${ARCHITECTURE} STREQUAL "32bit")
		SET(VI_ENMFP_LIBRARY_NAME codegen.Darwin)
		SET(VI_ENMFP_LIBRARY_CURRENT ${LIBRARIES32}/libcodegen.Darwin.so)
	ELSEIF(${ARCHITECTURE} STREQUAL "64bit")
		SET(VI_ENMFP_LIBRARY_NAME codegen.Darwin-x86_64)
		SET(VI_ENMFP_LIBRARY_CURRENT ${LIBRARIES64}/libcodegen.Darwin-x86_64.so)
	ENDIF()
ELSEIF(${SYSTEM} STREQUAL "LINUX")
	IF(${ARCHITECTURE} STREQUAL "32bit")
		SET(VI_ENMFP_LIBRARY_NAME codegen.Linux-i686)
		SET(VI_ENMFP_LIBRARY_CURRENT ${LIBRARIES32}/libcodegen.Linux-i686.so)
	ELSEIF(${ARCHITECTURE} STREQUAL "64bit")
		SET(VI_ENMFP_LIBRARY_NAME codegen.Linux-x86_64)
		SET(VI_ENMFP_LIBRARY_CURRENT ${LIBRARIES64}/libcodegen.Linux-x86_64.so)
	ENDIF()
ELSE()
	MESSAGE(ERROR " The ENMFP library can only be installed on Unix, Apple and Windows systems.")
ENDIF()

#Find the library and create the global variable
INSTALL(FILES ${VI_ENMFP_LIBRARY_CURRENT} DESTINATION external/enmfp)
FIND_LIBRARY(ENMFP_LIBRARY NAMES ${VI_ENMFP_LIBRARY_NAME} PATHS ${PROJECT_BINARY_DIR}/external/enmfp)
