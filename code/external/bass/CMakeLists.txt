#Setup directory paths
SET(ROOT ${CMAKE_CURRENT_SOURCE_DIR})
SET(HEADERS ${ROOT}/headers)
SET(LIBRARIES ${ROOT}/libraries)
SET(LIBRARIES64 ${ROOT}/libraries/64bit)
SET(LIBRARIES32 ${ROOT}/libraries/32bit)
SET(PLUGINS ${ROOT}/libraries/plugins)
SET(PLUGINS64 ${ROOT}/libraries/plugins/64bit)
SET(PLUGINS32 ${ROOT}/libraries/plugins/32bit)
SET(BASS_LIBRARY_LOCATION ${CMAKE_INSTALL_PREFIX}/external/bass CACHE INTERNAL "Bass library install directory")
SET(BASS_PLUGINS_LOCATION ${CMAKE_INSTALL_PREFIX}/external/bass/plugins CACHE INTERNAL "Bass plugins install directory")

IF(${SYSTEM} MATCHES "WINDOWS")
	SET(VI_BASS_LIBRARY_INSTALL bass.lib CACHE INTERNAL "Bass library")
	IF(${ARCHITECTURE} STREQUAL "32bit")
		FILE(GLOB VI_BASS_LIBRARY_CURRENT ${LIBRARIES32}/bass.dll)
	ELSEIF(${ARCHITECTURE} STREQUAL "64bit")
		FILE(GLOB VI_BASS_LIBRARY_CURRENT ${LIBRARIES64}/bass.dll)
		FILE(GLOB VI_BASS_PLUGINS64 ${PLUGINS64}/*.dll)
	ENDIF()
	FILE(GLOB VI_BASS_PLUGINS32 ${PLUGINS32}/*.dll)
ELSEIF(${SYSTEM} MATCHES "MACOSX")
	SET(VI_BASS_LIBRARY_INSTALL libbass.dylib CACHE INTERNAL "Bass library install directory")
	SET(VI_BASS_LIBRARY_CURRENT ${LIBRARIES32}/libbass.dylib)
	FILE(GLOB VI_BASS_PLUGINS32 ${PLUGINS32}/*.dylib)
ELSEIF(${SYSTEM} MATCHES "LINUX")
	SET(VI_BASS_LIBRARY_INSTALL libbass.so CACHE INTERNAL "Bass library install directory")
	IF(${ARCHITECTURE} STREQUAL "32bit")
		SET(VI_BASS_LIBRARY_CURRENT ${LIBRARIES32}/libbass.so)
		FILE(GLOB VI_BASS_PLUGINS32 ${PLUGINS32}/*.so)
	ELSEIF(${ARCHITECTURE} STREQUAL "64bit")
		SET(VI_BASS_LIBRARY_CURRENT ${LIBRARIES64}/libbass.so)
		FILE(GLOB VI_BASS_PLUGINS64 ${PLUGINS64}/*.so)
	ENDIF()
ELSE()
	MESSAGE(ERROR "The Bass library can only be installed on Unix, Apple and Windows systems.")
ENDIF()

#Find the library and create the global variable
FIND_LIBRARY(BASS_LIBRARY NAMES bass.lib bass PATHS ${PROJECT_BINARY_DIR}/external/bass)

INSTALL(FILES ${VI_BASS_LIBRARY_CURRENT} DESTINATION external/bass)
